apiVersion: v1
kind: Namespace
metadata:
  name: nn-slo
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nn-slo
  namespace: nn-slo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nn-slo
rules:
  - apiGroups: [""]
    resources: ["pods","nodes"]
    verbs: ["get","list","watch","delete"]
  - apiGroups: ["apps"]
    resources: ["deployments","replicasets","deployments/scale"]
    verbs: ["get","list","watch","patch","update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nn-slo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nn-slo
subjects:
  - kind: ServiceAccount
    name: nn-slo
    namespace: nn-slo
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nn-slo-config
  namespace: nn-slo
data:
  PROM_URL: "http://prometheus.monitoring:9090"
  K8S_IN_CLUSTER: "true"
  K8S_DRY_RUN: "true"   # flip to false when confident
  TOP_K: "10"
  SLO_P95_TARGET_MS: "300"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nn-slo
  namespace: nn-slo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nn-slo
  template:
    metadata:
      labels:
        app: nn-slo
    spec:
      serviceAccountName: nn-slo
      containers:
        - name: nn-slo
          image: your-registry/nn-slo:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: nn-slo-config
---
apiVersion: v1
kind: Service
metadata:
  name: nn-slo
  namespace: nn-slo
spec:
  selector:
    app: nn-slo
  ports:
    - port: 80
      targetPort: 8080
